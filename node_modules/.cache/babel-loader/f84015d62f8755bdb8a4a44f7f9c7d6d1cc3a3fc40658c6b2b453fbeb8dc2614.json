{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\mern stack projects\\\\e-commerce-frontend\\\\src\\\\ShopContext\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nexport const getDefaultCart = () => {\n  let cart = {};\n  for (let i = 0; i < 300 + 1; i++) {\n    cart[i] = 0;\n  }\n  return cart;\n};\nexport const ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  //if we use this we have to add setamount personally to all components that change quantity\n  //instead we want to change display with respect to change in quantity not wrt occurring of a event.\n  /* const [amount,setAmount] = useState(0); */\n\n  useEffect(() => {\n    fetch('http://localhost:4000/addProducts').then(response => response.json()).then(data => setAll_Product(data));\n  }, []);\n  const addToCart = (itemId, quantity) => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + quantity\n    }));\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    //if we use total quantity method we are only updating value when we go to cart page not when we click add to cart\n    //use a funtion to setamount so that the amount is not set statically and set every time when the funtion is caled which is when the button is clicked.\n    /* let totalQuantity = 0; */\n    for ( /* let item=0;item<all_product.length;item++ */ /* use the count based loop or iterate through each value in cartitems object */\n    const item in cartItems) {\n      console.log(\"items:\", [item]);\n      if (cartItems[item] != 0) {\n        /* totalQuantity+=Number(cartItems[item]) */\n        let itemInfo = all_product.find(product => product.id === Number(item)) /* .find((product)=>(product.id) === Number(item)) */;\n        console.log(\"iteminfo\", itemInfo);\n        totalAmount += itemInfo.new_price * cartItems[item];\n      }\n    }\n    /*  setAmount(totalQuantity); */\n    return totalAmount;\n  };\n  const getTotalCartQuantity = () => {\n    let amount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] != 0) {\n        amount += cartItems[item];\n      }\n    }\n    return amount;\n  };\n  const contextValue = {\n    all_product,\n    cartItems,\n    setCartItems,\n    addToCart,\n    removeFromCart,\n    getTotalCartAmount,\n    getTotalCartQuantity\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }, this);\n};\n_s(ShopContextProvider, \"q+tC196rCahOrW4APWQPZ19ehJ4=\");\n_c = ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","i","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","fetch","then","response","json","data","addToCart","itemId","quantity","prev","removeFromCart","getTotalCartAmount","totalAmount","item","console","log","itemInfo","find","product","id","Number","new_price","getTotalCartQuantity","amount","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/mern stack projects/e-commerce-frontend/src/ShopContext/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nexport const getDefaultCart = ()=>{\r\n    let cart = {};\r\n    for(let i=0;i<300+1;i++){\r\n       cart[i]=0;\r\n    }\r\n   return cart;\r\n   }\r\n\r\nexport const ShopContextProvider = (props) =>{\r\n    const [all_product,setAll_Product] = useState([])\r\n    const [cartItems,setCartItems] = useState(getDefaultCart());\r\n    //if we use this we have to add setamount personally to all components that change quantity\r\n    //instead we want to change display with respect to change in quantity not wrt occurring of a event.\r\n    /* const [amount,setAmount] = useState(0); */\r\n\r\n    useEffect(() => {\r\n       fetch('http://localhost:4000/addProducts')\r\n      .then((response)=>response.json())\r\n      .then((data)=>setAll_Product(data))\r\n    }, [])\r\n    \r\n   \r\n    const addToCart=(itemId,quantity)=>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]+quantity}))\r\n        \r\n    }\r\n    const removeFromCart=(itemId)=>{\r\n        setCartItems((prev)=>({...prev,[itemId]:prev[itemId]-1}))\r\n    }\r\n\r\n    const getTotalCartAmount=()=>{\r\n        let totalAmount = 0;\r\n        //if we use total quantity method we are only updating value when we go to cart page not when we click add to cart\r\n        //use a funtion to setamount so that the amount is not set statically and set every time when the funtion is caled which is when the button is clicked.\r\n        /* let totalQuantity = 0; */\r\n        for(/* let item=0;item<all_product.length;item++ */ /* use the count based loop or iterate through each value in cartitems object */\r\n            const item in cartItems){\r\n            console.log(\"items:\",[item]) \r\n            if(cartItems[item]!=(0)){\r\n                /* totalQuantity+=Number(cartItems[item]) */\r\n                let itemInfo = all_product.find((product)=>(product.id) === Number(item))/* .find((product)=>(product.id) === Number(item)) */;\r\n                console.log(\"iteminfo\",itemInfo)\r\n                    totalAmount +=  itemInfo.new_price * cartItems[item] ;\r\n            }\r\n        }   \r\n       /*  setAmount(totalQuantity); */\r\n        return totalAmount;\r\n        }\r\n    const getTotalCartQuantity = ()=>{\r\n        let amount=0;\r\n        for(const item in cartItems){\r\n            if(cartItems[item]!=(0)){\r\n                amount+=cartItems[item];\r\n            }\r\n        } \r\n        return amount \r\n    }\r\n    \r\n    \r\n    const contextValue = {all_product,cartItems,setCartItems,addToCart,removeFromCart,getTotalCartAmount,getTotalCartQuantity};\r\n    \r\n    return (<ShopContext.Provider value={contextValue}>\r\n            {/* props.children are all the elements that are going to use the contextValue\r\n            and is not the contextValue */}\r\n            {props.children}\r\n        </ShopContext.Provider>)\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}